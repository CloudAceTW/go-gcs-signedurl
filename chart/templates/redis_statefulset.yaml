{{- if .Values.redis.inClusterEnabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "chart.fullname" . }}-redis
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/service_type: redis-database
    {{- include "chart.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/service_type: redis-database
      {{- include "chart.selectorLabels" . | nindent 6 }}
  serviceName: "redis"
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/service_type: redis-database
        {{- include "chart.selectorLabels" . | nindent 8 }}
    spec:
      containers:
      - name: redis
        image: redis:7.0-alpine
        command: ["redis-server", "--appendonly", "yes"]
        ports:
        - containerPort: {{ .Values.redis.port }}
          name: web
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 1000m
            memory: 4Gi
        volumeMounts:
        - name: redis-aof
          mountPath: /data
  volumeClaimTemplates:
  - metadata:
      name: redis-aof
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi
{{- end }}
